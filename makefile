# Put the name of your executable here:
TARGET := dabdab_ubuntu

# The compiler you want to use:
#CXX := i686-w64-mingw32-g++
CXX := g++

# Some common flags: enable warnings, treat them as errors, use modern C++, enable debugging, and some optimization
CXXFLAGS += -Wall -std=c++14 -O3

# Here's some magic: these flags tell the compiler to produce dependency information for make
CPPFLAGS += -MMD -MP

# More magic: use all .cpp files in this directory as source files
SRCS := $(wildcard *.cpp)

# The first target is the default, commonly called "all".  This builds your executable.
all : $(TARGET)

# A useful command is to clean out anything the compiler generates (executable, objects, and dependency information)
clean :
	$(RM) -f $(TARGET) $(SRCS:.cpp=.o) $(SRCS:.cpp=.d)

# Here's the meat of the Makefile: how to link your executable from the object files
$(TARGET) : $(SRCS:.cpp=.o)
	$(CXX) $(LDFLAGS) $^ $(LDLIBS) -o $@

# Note: make knows how to build object files from C++ source files.  The following rule is built-in, we just set the right variables to use it:
# %.o : %.cpp
#         $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c -o $@ $<

# The last bit of magic: include the dependency information generated by the compiler the last time it ran
-include $(SRCS:.cpp=.d)
